<!DOCTYPE html>
<html>
<meta http-equiv="X-UA-Compatible" content="chrome=1, IE=edge">
<meta charset = "UTF-8">
<head>
<title>Pixel War</title>
  <style>
    html, body {
      width: 100%;
      height: 100%;
      margin: 0px;
      border: 0;
      overflow: hidden;
      display: block;
    }
    </style>
</head>
<body>
<div id = "canvasDiv" style = "
      background: aqua;
      width: 100%;
      height: 100%;
      margin: 0px;
      border: 0;
      overflow: hidden;
      display: block;
"></div>
<script>
var compareHasBeenHurt = false;
var hasBeenHurt = false;
var instructionsCompleted = false;
var gameWon = false;
var dPressed = false;
var aPressed = false;
var wPressed = false;
var sPressed = false;
var rightPressed = false;
var leftPressed = false;
var upPressed = false;
var downPressed = false;
var p1X = 0;
var p1Xvel = 0;
var p1FireX;
var p1FireY;
var p1FireDir;
var p1Y = screen.height/2;
var p1Yvel = 0;
var p1OnFire = false;
var p1Health = 100;
var p2X = screen.width-30;
var p2Xvel = 0;
var p2FireX;
var p2FireY;
var p2FireDir;
var p2Y = screen.height/2;
var p2Yvel = 0;
var p2OnFire = false;
var p2Health = 100;
var boxX = -50;
var boxY = 0;
var boxYvel = 0;
var boxGot = false;
var boxCounter = 0;
var boxDropped = false;
document.addEventListener("keydown",keyDownHandler,false);
document.addEventListener("keyup",keyUpHandler,false);
function keyDownHandler(e){
if(e.keyCode == 65){
aPressed = true;
}
if(e.keyCode == 68){
dPressed = true;
}
if(e.keyCode == 83){
sPressed = true;
}
if(e.keyCode == 87){
wPressed = true;
}
if(e.keyCode == 37){
leftPressed = true;
}
if(e.keyCode == 39){
rightPressed = true;
}
if(e.keyCode == 40){
downPressed = true;
}
if(e.keyCode == 38){
upPressed = true;
}
}
function keyUpHandler(e){
if(e.keyCode == 65){
aPressed = false;
}
if(e.keyCode == 68){
dPressed = false;
}
if(e.keyCode == 83){
sPressed = false;
}
if(e.keyCode == 87){
wPressed = false;
}
if(e.keyCode == 37){
leftPressed = false;
}
if(e.keyCode == 39){
rightPressed = false;
}
if(e.keyCode == 40){
downPressed = false;
}
if(e.keyCode == 38){
upPressed = false;
}
}
function instructions(){
alert("Welcome to Pixel War! To move, use A and D. To jump, press W. Press S to shoot fire. For player two, use the arrow keys. Click ok to start.");
instructionsCompleted = true;
}
function dropBox(){
boxGot = false;
boxDropped = true;
boxY = -30;
boxX = Math.floor((Math.random()*screen.width)-30);
}
function update(){
boxCounter++;
if(boxGot){
boxX = -50;
}
if(hasBeenHurt != compareHasBeenHurt){
dropBox();
compareHasBeenHurt = true;
}
if(boxCounter>1500){
dropBox();
boxCounter = 0;
}
if(!compareHasBeenHurt&&!boxGot&&!boxDropped){
dropBox();
}
if(boxY<screen.height-121){
boxYvel++;
}
boxY+=boxYvel;
if(boxY>screen.height-121){
boxY-=boxYvel;
boxYvel = 0;
}
if(p2Health>995){
p2Health = 995;
}
if(p2X+30>boxX&&p2X<boxX+30&&p2Y+30>boxY&&p2Y<boxY+30){
boxGot = true;
p2Health+=20;
}
if(p2FireX+10>=p1X&&p2FireX<=p1X+30&&p2FireY>=p1Y&&p2FireY+10<=p1Y+30){
hasBeenHurt = true;
p1OnFire = true;
p1Health-=5;
p2FireX = -50;
p2FireY = -50;
}
if(downPressed){
p2FireX = p2X;
p2FireY = p2Y;
if(p2X>p1X){
p2FireDir = "left";
}
else{
p2FireDir = "right";
}
}
if(p2FireDir === "right"){
p2FireX +=20;
}
else{
p2FireX -= 20;
}
if(p2Y>screen.width-115){
p2Y=screen.height-121;
}
if(p2Y<screen.height-120){
if(p2Y<screen.height-121){
p2Yvel++;
}
p2Y+=p2Yvel;
}
else{
p2Y-=p2Yvel;
p2Yvel = 0;
}
if(upPressed&&p2Y>=screen.height-121){
p2Yvel = -15;
}
if(leftPressed&&p2X>0){
p2Xvel--;
}
if(rightPressed&&p2X<screen.width-30){
p2Xvel++;
}
p2X+=p2Xvel;
p2Xvel = p2Xvel*0.9;
if(p2X<=0||p2X>=screen.width-30){
p2X-=p2Xvel;
p2Xvel = 0;
}
if(p1Health>995){
p1Health = 995;
}
if(p1X+30>boxX&&p1X<boxX+30&&p1Y+30>boxY&&p1Y<boxY+30){
boxGot = true;
p1Health+=20;
}
if(p1FireX+10>=p2X&&p1FireX<=p2X+30&&p1FireY>=p2Y&&p1FireY+10<=p2Y+30){
hasBeenHurt = true;
p2OnFire = true;
p2Health-=5;
p1FireX = -50;
p1FireY = -50;
}
if(sPressed){
p1FireX = p1X;
p1FireY = p1Y;
if(p1X>p2X){
p1FireDir = "left";
}
else{
p1FireDir = "right";
}
}
if(p1FireDir === "right"){
p1FireX +=20;
}
else{
p1FireX -= 20;
}
if(p1Y>screen.width-115){
p1Y=screen.height-121;
}
if(p1Y<screen.height-120){
if(p1Y<screen.height-121){
p1Yvel++;
}
p1Y+=p1Yvel;
}
else{
p1Y-=p1Yvel;
p1Yvel = 0;
}
if(wPressed&&p1Y>=screen.height-121){
p1Yvel = -15;
}
if(aPressed&&p1X>0){
p1Xvel--;
}
if(dPressed&&p1X<screen.width-30){
p1Xvel++;
}
p1X+=p1Xvel;
p1Xvel = p1Xvel*0.9;
if(p1X<=0||p1X>=screen.width-30){
p1X-=p1Xvel;
p1Xvel = 0;
}
}
function draw(){
ctx.clearRect(0,0,canvas.width,canvas.height);
if(!instructionsCompleted){
instructions();
}
update();
if(p2Health<=0&&!gameWon){
wPressed = false;
aPressed = false;
sPressed = false;
dPressed = false;
upPressed = false;
downPressed = false;
leftPressed = false;
rightPressed = false;
alert("Player 1 Wins!");
gameWon = true;
}
if(p1Health<=0&&!gameWon){
wPressed = false;
aPressed = false;
sPressed = false;
dPressed = false;
upPressed = false;
downPressed = false;
leftPressed = false;
rightPressed = false;
alert("Player 2 Wins!");
gameWon = true;
}
ctx.fillStyle = "red";
ctx.font = "30px Arial";
if(!gameWon){
ctx.fillText("Player 1 Health: "+p1Health,5,30);
ctx.fillText("Player 2 health: "+p2Health,screen.width-275,30);
}
ctx.fillStyle = "orange";
ctx.fillRect(p1FireX, p1FireY, 10, 10);
ctx.fillRect(p2FireX, p2FireY, 10, 10);
if(p1OnFire){
ctx.fillStyle = "orange";
}
else{
ctx.fillStyle = "blue";
}
ctx.fillRect(p1X,p1Y,30,30);
if(p2OnFire){
ctx.fillStyle = "orange";
}
else{
ctx.fillStyle = "red";
}
ctx.fillRect(p2X,p2Y,30,30);
ctx.fillStyle = "white";
ctx.fillRect(boxX,boxY,30,30);
ctx.fillStyle = "red";
ctx.fillRect(boxX+12,boxY+5,5,20);
ctx.fillRect(boxX+5,boxY+13,20,5);
ctx.fillStyle = "green";
ctx.fillRect(0,screen.height-91,screen.width,91);
p1OnFire = false;
p2OnFire = false;
}
function onLoad(){
window.moveTo(-7, 0);
window.resizeTo(screen.width+13, screen.height);
var canvasDiv = document.getElementById('canvasDiv');
canvas = document.createElement('canvas');
canvas.setAttribute('width', window.innerWidth);
canvas.setAttribute('height', window.innerHeight);
canvas.setAttribute('id', 'canvas');
canvasDiv.appendChild(canvas);
if(typeof G_vmlCanvasManager != 'undefined') {
	canvas = G_vmlCanvasManager.initElement(canvas);
}
ctx = canvas.getContext("2d");
setInterval(draw,1);
}
if(window.addEventListener)
{
    window.addEventListener("load",onLoad,false);
}
else if(window.attachEvent)
{
    window.attachEvent("onload",onLoad);
}
</script>
</body>
<html>